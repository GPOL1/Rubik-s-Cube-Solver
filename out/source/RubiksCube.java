/* autogenerated by Processing revision 1296 on 2025-03-14 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import peasy.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class RubiksCube extends PApplet {



PeasyCam cam;

int UPP = 0;
int DWN = 1;
int RGT = 2;
int LFT = 3;
int FRT = 4;
int BCK = 5;

int[] colors = {0xFFFFFFFF, 0xFFFFFF00, 0xFFFFA500, 0xFFFF0000, 0xFF00FF00, 0xFF0000FF};

int dim = 3;
Box[][][] cube = new Box[dim][dim][dim];

public void setup() {
  /* size commented out by preprocessor */;
  cam = new PeasyCam(this, 400);
  for (int i = 0; i < dim; i++){
    for (int j = 0; j < dim; j++){
      for (int k = 0; k < dim; k++){

        float len = 50;
        float offset = ((dim - 1) * len) * 0.5f;
        float x = len * i - offset;
        float y = len * j - offset;
        float z = len * k - offset; 
        cube[i][j][k] = new Box(x,y,z,len);

      }
    }
  }
}

public void draw() {
  background(51);
  for (int i = 0; i < dim; i++){
    for (int j = 0; j < dim; j++){
      for (int k = 0; k < dim; k++){

        cube[i][j][k].show();

      }
    }
  }
}
class Box {
  PVector pos;
  float len;
  
  Box(float x, float y, float z, float len_) {
    pos = new PVector(x,y,z);
    len = len_;
  }
  
  public void show() {
    fill(255);
    stroke(0);
    strokeWeight(8);
    pushMatrix();
    translate(pos.x, pos.y, pos.z);
    
    beginShape(QUADS);
    
    float r = len/2;

    fill(colors[UPP]);
    vertex(-r, -r, r);
    vertex(r, -r, r);
    vertex(r, r, r);
    vertex(-r, r, r);

    fill(colors[DWN]);
    vertex(-r, -r, -r);
    vertex(r, -r, -r);
    vertex(r, r, -r);
    vertex(-r, r, -r);

    fill(colors[RGT]);
    vertex(r, r, r);
    vertex(-r, r, r);
    vertex(-r, r, -r);
    vertex(r, r, -r);

    fill(colors[LFT]);
    vertex(r, -r, r);
    vertex(-r, -r, r);
    vertex(-r, -r, -r);
    vertex(r, -r, -r);

    fill(colors[FRT]);
    vertex(r, r, r);
    vertex(r, -r, r);
    vertex(r, -r, -r);
    vertex(r, r, -r);

    fill(colors[BCK]);
    vertex(-r, r, r);
    vertex(-r, -r, r);
    vertex(-r, -r, -r);
    vertex(-r, r, -r);

    endShape();

    popMatrix();
  }
}


  public void settings() { size(600, 600, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "RubiksCube" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
